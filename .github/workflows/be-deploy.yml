name: be deploy
on:
  workflow_dispatch:
  push:
    branches:
      - develop

jobs:
  deploy:
    name: deploy
    runs-on: ubuntu-24.04
    environment: develop
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: '22.13.0'
      - name: Install node dependencies
        run: |
          npm ci
          npm install -g serverless

      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Create .env file
        run: |
          touch .env
          echo INTAKEQ_BASE_URL=${{ secrets.INTAKEQ_BASE_URL }} >> .env
          echo INTAKEQ_AUTH_KEY=${{ secrets.INTAKEQ_AUTH_KEY }} >> .env
          echo INTAKEQ_SIGNUP_FORM=${{ secrets.INTAKEQ_SIGNUP_FORM }} >> .env
          echo AIRTABLE_API_KEY=${{ secrets.AIRTABLE_API_KEY }} >> .env
          echo GOOGLE_CALENDAR_CREDENTIALS=${{ secrets.GOOGLE_CALENDAR_CREDENTIALS }} >> .env
          echo IS_AWS=true >> .env
          echo RDS_HOST=${{ secrets.RDS_HOST }} >> .env
          echo RDS_PORT=${{ secrets.RDS_PORT }} >> .env
          echo RDS_DATABASE=${{ secrets.RDS_DATABASE }} >> .env
          echo RDS_USER=${{ secrets.RDS_USER }} >> .env
          echo ANALYTICS_MEASUREMENT_ID=${{ secrets.ANALYTICS_MEASUREMENT_ID }} >> .env
          echo ANALYTICS_API_SECRET=${{ secrets.ANALYTICS_API_SECRET }} >> .env
          echo AIRTABLE_BASE_ID=${{ secrets.AIRTABLE_BASE_ID }} >> .env
          echo AIRTABLE_TABLE_ID=${{ secrets.AIRTABLE_TABLE_ID }} >> .env
          echo TEST_WELCOME_VIDEO=${{ vars.TEST_WELCOME_VIDEO }} >> .env
          echo TEST_GREETINGS_VIDEO=${{ vars.TEST_GREETINGS_VIDEO }} >> .env
          cat .env

      - name: Install uv
        uses: astral-sh/setup-uv@v5

      - name: Install python dependencies
        run: uv sync

      - name: Check Python version # checking the python version to see if 3.x is installed.
        run: python --version

      - name: Install Plugin and deploy
        env:
          SERVERLESS_ACCESS_KEY: ${{ secrets.SERVERLESS_ACCESS_KEY }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          serverless deploy

      - name: Run Database Migration
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          aws lambda invoke \
            --function-name SolHealth-BE-dev-migrate \
            --region us-east-2 \
            --payload '{}' \
            --cli-binary-format raw-in-base64-out \
            response.json
          cat response.json