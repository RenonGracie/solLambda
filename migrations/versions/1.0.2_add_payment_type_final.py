# migrations/versions/1.0.2_add_payment_type_final.py
"""add payment type to signup form with proper defaults

Revision ID: 1.0.2_add_payment_type_final
Revises: c9f2e31a1caf 
Create Date: 2025-07-28 12:00:00.000000

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.sql import table, column, text


# revision identifiers, used by Alembic.
revision: str = '1.0.2_add_payment_type_final'
down_revision: Union[str, None] = '89dd2d1e127a' # UPDATE THIS!
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # Add the column
    op.add_column('signup', sa.Column('payment_type', sa.String(length=50), nullable=True, server_default='out_of_pocket'))

    # Update existing rows to 'out_of_pocket' if payment_type is NULL
    # This handles cases where new rows might be inserted before the default takes effect,
    # or if previous runs set nullable=True without a server_default.
    signup_table = table(
        'signup',
        column('payment_type', sa.String)
    )
    op.execute(
        signup_table.update().where(
            signup_table.c.payment_type.is_(None)
        ).values(
            payment_type='out_of_pocket'
        )
    )

    # After updating existing rows, alter the column to be non-nullable
    # This step is critical to enforce the nullable=False constraint from your model.
    # Note: SQLite does not support ALTER COLUMN to NOT NULL if there are NULLs.
    # PostgreSQL supports it, but we ensured no NULLs are left above.
    with op.batch_alter_table('signup', schema=None) as batch_op:
        batch_op.alter_column('payment_type',
               existing_type=sa.String(length=50),
               nullable=False,
               existing_nullable=True,
               existing_server_default='out_of_pocket') # Keep existing_server_default


    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('signup', schema=None) as batch_op:
        batch_op.drop_column('payment_type')

    # ### end Alembic commands ###